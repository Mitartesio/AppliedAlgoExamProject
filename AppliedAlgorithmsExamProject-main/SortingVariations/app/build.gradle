/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {

    mainClass.set("SortingVariations.Main")

    applicationDefaultJvmArgs = ["-ea"]



    // remember, we can run with gradle run --args="recursive" for example

    // Define the main class for the application.
    // if (project.hasProperty("mainClass")) {
    //     mainClass.set(project.getProperty("mainClass"))
    // } else {
    //     System.out.println("INFO: If you are trying to run the program, recall to specify the main class with -PmainClass=<package>.<java_class>")
    // }
}

tasks.test {
    // Gradle automatically uses JUnit 4 when the dependencies include junit:junit.
    // No need for `useJUnitPlatform()` here.
}

jar {
    manifest {
        attributes 'Main-Class': 'SortingVariations.Main'
    }
}